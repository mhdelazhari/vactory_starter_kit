{"version":3,"sources":["style.scss","style.css","../../../../../../../../../themes/vactory/src/scss/abstracts/mixins/_px-to-rem.scss","../../../../../../../../../themes/vactory/src/scss/vendor/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["$is_rtl: false;\n @import \"__import.scss\";\nsection.vf-slider--swiper {\n  width: 100%;\n  height: 100vh;\n  .swiper-container {\n    width: 100%;\n    height: 100%;\n  }\n  .slide {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    text-align: center;\n    @include rem(font-size, 18px);\n    background: #fff;\n    overflow: hidden;\n    flex-direction: column;\n\n    .word-part {\n      white-space: nowrap;\n    }\n\n    &.swiper-slide-active {\n      .slide-description {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n      }\n    }\n\n    &-image {\n      position: absolute;\n      top: -200px;\n      left: -200px;\n      width: calc(100% + 400px);\n      height: calc(100% + 400px);\n      background-position: 50% 50%;\n      background-size: cover;\n    }\n    &-title {\n      @include rem(font-size, 50px);\n      line-height: 1;\n      max-width: calc(100% - 20px);\n      white-space: normal;\n      word-break: break-word;\n      color: #FFF;\n      z-index: 100;\n      text-transform: uppercase;\n      font-weight: normal;\n      @include rem(margin-bottom, 20px);\n      @media (min-width: 45em) {\n        @include rem(font-size, 60px);\n        max-width: none;\n      }\n      span:not(.word-part) {\n        white-space: pre;\n        display: inline-block;\n        opacity: 0;\n      }\n    }\n    &-description {\n      color: #FFF;\n      z-index: 100;\n      max-width: calc(100% - 20px);\n      opacity: 0;\n      transform: translateY(40px) scale(.6);\n      transition: all .5s ease-in .3s\n    }\n  }\n  .slideshow {\n    position: relative;\n\n    &-pagination {\n      position: absolute;\n      bottom: 5rem;\n      left: 0;\n      width: 100%;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n      transition: .3s opacity;\n      z-index: 10;\n      &-item {\n        display: flex;\n        align-items: center;\n        .pagination-number {\n          opacity: 0.5;\n        }\n        &:hover,\n        &:focus {\n          cursor: pointer;\n        }\n        &:last-of-type {\n          .pagination-separator {\n            width: 0;\n          }\n        }\n        &.active {\n          .pagination-number {\n            opacity: 1;\n          }\n          .pagination-separator {\n            width: 10vw;\n          }\n          //.pagination-separator-loader {\n          //  transform: scaleX(1);\n          //  transition: all 3s ease;\n          //}\n        }\n      }\n    }\n\n    &-navigation {\n      &-button {\n        position: absolute;\n        top: 0;\n        display: flex;\n        justify-content: center;\n        align-items: flex-end;\n        @include rem(padding-bottom, 94px);\n        height: 100%;\n        @include rem(width, 40px);\n        z-index: 1000;\n        transition: all .3s ease;\n        color: #FFF;\n        &:hover, &:focus {\n          cursor: pointer;\n          background: rgba(#000, 0.5);\n        }\n        &.prev {\n          left: 0;\n        }\n        &.next {\n          right: 0;\n        }\n      }\n    }\n\n  }\n  .pagination-number {\n    @include rem(font-size, 30px);\n    color: #FFF;\n    @include rem(padding, 0 8px);\n  }\n  .pagination-separator {\n    display: none;\n    @media (min-width: 45em) {\n      display: block;\n    }\n    position: relative;\n    width: 40px;\n    height: 2px;\n    background: rgba(#FFFFFF, 0.25);\n    transition: all .3s ease;\n    &-loader {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: #FFFFFF;\n      transform-origin: 0 0;\n      //transform: scaleX(0);\n      //transition: all 0.3s ease;\n    }\n  }\n}\n\n\n\n\n@include media-breakpoint-up(lg) {\n  section.vf-slider--swiper {\n    .slide {\n      &-title {\n        max-width: 50%;\n      }\n      &-description {\n        max-width: 600px;\n      }\n    }\n    .slideshow {\n      &-navigation {\n        &-button {\n          align-items: center;\n          padding-bottom: 0;\n          @include rem(width, 80px);\n        }\n      }\n\n    }\n  }\n}\n","section.vf-slider--swiper {\n  width: 100%;\n  height: 100vh;\n}\n\nsection.vf-slider--swiper .swiper-container {\n  width: 100%;\n  height: 100%;\n}\n\nsection.vf-slider--swiper .slide {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  text-align: center;\n  font-size: 18px;\n  font-size: 1.125rem;\n  background: #fff;\n  overflow: hidden;\n  flex-direction: column;\n}\n\nsection.vf-slider--swiper .slide .word-part {\n  white-space: nowrap;\n}\n\nsection.vf-slider--swiper .slide.swiper-slide-active .slide-description {\n  opacity: 1;\n  transform: translateY(0) scale(1);\n}\n\nsection.vf-slider--swiper .slide-image {\n  position: absolute;\n  top: -200px;\n  left: -200px;\n  width: calc(100% + 400px);\n  height: calc(100% + 400px);\n  background-position: 50% 50%;\n  background-size: cover;\n}\n\nsection.vf-slider--swiper .slide-title {\n  font-size: 50px;\n  font-size: 3.125rem;\n  line-height: 1;\n  max-width: calc(100% - 20px);\n  white-space: normal;\n  word-break: break-word;\n  color: #FFF;\n  z-index: 100;\n  text-transform: uppercase;\n  font-weight: normal;\n  margin-bottom: 20px;\n  margin-bottom: 1.25rem;\n}\n\n@media (min-width: 45em) {\n  section.vf-slider--swiper .slide-title {\n    font-size: 60px;\n    font-size: 3.75rem;\n    max-width: none;\n  }\n}\n\nsection.vf-slider--swiper .slide-title span:not(.word-part) {\n  white-space: pre;\n  display: inline-block;\n  opacity: 0;\n}\n\nsection.vf-slider--swiper .slide-description {\n  color: #FFF;\n  z-index: 100;\n  max-width: calc(100% - 20px);\n  opacity: 0;\n  transform: translateY(40px) scale(0.6);\n  transition: all .5s ease-in .3s;\n}\n\nsection.vf-slider--swiper .slideshow {\n  position: relative;\n}\n\nsection.vf-slider--swiper .slideshow-pagination {\n  position: absolute;\n  bottom: 5rem;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  transition: .3s opacity;\n  z-index: 10;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item {\n  display: flex;\n  align-items: center;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item .pagination-number {\n  opacity: 0.5;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item:hover, section.vf-slider--swiper .slideshow-pagination-item:focus {\n  cursor: pointer;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item:last-of-type .pagination-separator {\n  width: 0;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item.active .pagination-number {\n  opacity: 1;\n}\n\nsection.vf-slider--swiper .slideshow-pagination-item.active .pagination-separator {\n  width: 10vw;\n}\n\nsection.vf-slider--swiper .slideshow-navigation-button {\n  position: absolute;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: 94px;\n  padding-bottom: 5.875rem;\n  height: 100%;\n  width: 40px;\n  width: 2.5rem;\n  z-index: 1000;\n  transition: all .3s ease;\n  color: #FFF;\n}\n\nsection.vf-slider--swiper .slideshow-navigation-button:hover, section.vf-slider--swiper .slideshow-navigation-button:focus {\n  cursor: pointer;\n  background: rgba(0, 0, 0, 0.5);\n}\n\nsection.vf-slider--swiper .slideshow-navigation-button.prev {\n  left: 0;\n}\n\nsection.vf-slider--swiper .slideshow-navigation-button.next {\n  right: 0;\n}\n\nsection.vf-slider--swiper .pagination-number {\n  font-size: 30px;\n  font-size: 1.875rem;\n  color: #FFF;\n  padding: 0 8px;\n  padding: 0 0.5rem;\n}\n\nsection.vf-slider--swiper .pagination-separator {\n  display: none;\n  position: relative;\n  width: 40px;\n  height: 2px;\n  background: rgba(255, 255, 255, 0.25);\n  transition: all .3s ease;\n}\n\n@media (min-width: 45em) {\n  section.vf-slider--swiper .pagination-separator {\n    display: block;\n  }\n}\n\nsection.vf-slider--swiper .pagination-separator-loader {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #FFFFFF;\n  transform-origin: 0 0;\n}\n\n@media (min-width: 992px) {\n  section.vf-slider--swiper .slide-title {\n    max-width: 50%;\n  }\n  section.vf-slider--swiper .slide-description {\n    max-width: 600px;\n  }\n  section.vf-slider--swiper .slideshow-navigation-button {\n    align-items: center;\n    padding-bottom: 0;\n    width: 80px;\n    width: 5rem;\n  }\n}\n","// @mixin\n// px to rem\n//\n// src/scss/mixins/_px-to-rem.scss\n// -----------------------------------------------------------------------------\n\n// Baseline, measured in pixels\n// The value should be the same as the font-size value for the html element\n// the default value is 16px;\n\n$baseline-px: 16px;\n\n@mixin rem($property, $px-values) {\n\n  // Convert the baseline into rems\n  $baseline-rem: $baseline-px / 1rem * 1;\n\n  // Print the first line in pixel values\n  #{$property}: $px-values;\n\n  // If there is only one (numeric) value, return the property/value line for it.\n  @if type-of($px-values) == \"number\" {\n\n    #{$property}: $px-values / $baseline-rem;\n\n  } @else {\n\n    // Create an empty list that we can dump values into\n    $rem-values: ();\n\n    @each $value in $px-values {\n\n      // If the value is zero or not a number, return it\n      @if $value == 0 or type-of($value) != \"number\" {\n\n        $rem-values: append($rem-values, $value);\n      } @else {\n\n        $rem-values: append($rem-values, $value / $baseline-rem);\n\n      }\n    }\n\n    // Return the property and its list of converted values\n    #{$property}: $rem-values;\n\n  }\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}