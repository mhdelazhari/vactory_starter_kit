{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% set classes = [
  'card',
  'card--inline',
  'card--formus',
  'mb-4'
  ]
%}

<article {{ attributes.addClass(classes) }}>

  <div class="card__image">
    {% if content.field_vactory_media.0 %}
      {{ addAttributes(noWrapper(content.field_vactory_media), {'class': ['img-fluid']}) }}
    {% else %}
      <img class="img-fluid lazyload" src="{{ base_path ~ directory }}/assets/img/smart-search-default.png" typeof="foaf:Image" alt="image" title="{{ label }}">
    {% endif %}
  </div>

    <div class="card__body">
      <h3{{ title_attributes }} class="card__title">
        {% if  url is null %}
          <span>{{ label }}</span>
        {% else %}
          <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        {% endif %}
      </h3>

      <div class="card__meta">
        <div class="card__date mr-2">
          {% if content.field_vactory_date %}
            {{ noWrapper(hideLabel(addAttributes(content.field_vactory_date))) }} |
          {% endif %}
        </div>
        {% if content.field_vactory_forums_thematic %}
          {% for key,thematic in content.field_vactory_forums_thematic %}
            {% if key matches '/^\\d+$/' %}
              <span class="card__tag badge badge-primary">{{ content.field_vactory_forums_thematic[key] }}</span>
            {% endif %}
          {% endfor %}
        {% endif %}
      </div>

      <div class="card__meta">
        {% if node.field_vactory_forum_status.value == "1" %}
          <span class="badge badge-pill badge-success p-2 mr-1" title="Forum actif"> </span>
        {% else %}
          <span class="badge badge-pill badge-secondary p-2 mr-1" title="Forum fermÃ©"> </span>
        {% endif %}

        <small class="text-muted">
          {% if content.field_vactory_date %}
            {{ noWrapper(content.field_vactory_forum_room) }} |
          {% endif %}
          <i class='icon-comment'></i>
          <strong class="pr-1">{{ node.comment.comment_count }}</strong>
          {{ node.comment.comment_count > 1 ? 'Replies'|t : 'Reply'|t }}
        </small>
      </div>

      <div class="card__description"><p>{{ noWrapper(content.field_vactory_excerpt) }}</p></div>

      {% if url is not null %}
        <div class="card__read-more">
          <a href="{{ url }}" class="btn btn-primary">{{ 'Consulter'|t }}</a>
        </div>
      {% endif %}
    </div>
</article>
